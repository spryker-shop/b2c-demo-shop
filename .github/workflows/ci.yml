name: B2C-CI

on:
    pull_request:
        types: [ labeled, unlabeled, synchronize, opened ]
    push:
        branches:
            - master
    workflow_dispatch:

env:
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    WEEKLY_CI_SLACK_CHANNEL_ID: ${{ secrets.WEEKLY_CI_SLACK_CHANNEL_ID }}
    JIRA_TICKET_SLACK_USER_GROUP_MAPPING: ${{ secrets.JIRA_TICKET_SLACK_USER_GROUP_MAPPING }}

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    docker-alpine-php-83-mariadb-cypress-dynamic-store-off:
        name: "Docker / Alpine / PHP 8.3 / MariaDB / Cypress / UI / Dynamic Store OFF"
        runs-on: ubuntu-latest
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:8.3
            TRAVIS: 1
            ROBOT_TESTS_ARTIFACTS_BUCKET_REGION: eu-west-1
        steps:
            -   uses: actions/checkout@v4

            -   name: Install packages
                run: |
                    sudo apt-get update
                    sudo apt-get install -y python3-pip
                    pip3 install --upgrade pip
                    pip3 install awscli

            -   name: Install cypress-tests folder
                run: |
                    cd ./data && composer require "spryker/cypress-tests:dev-master" --dev --no-interaction
                    cp -r vendor ../vendor

            -   name: Install docker-compose
                run: |
                    sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                    sudo chmod +x /usr/local/bin/docker-compose

            -   name: Install Project
                continue-on-error: true
                run: |
                    git clone https://github.com/spryker/docker-sdk.git ./docker
                    docker/sdk boot deploy.ci.acceptance.mariadb.dynamic-store-off.cypress.yml
                    sudo bash -c "echo '127.0.0.1 backend-api.eu.spryker.local backend-api.us.spryker.local backend-gateway.eu.spryker.local backend-gateway.us.spryker.local backoffice.eu.spryker.local backoffice.us.spryker.local glue-backend.eu.spryker.local glue-backend.us.spryker.local glue-storefront.eu.spryker.local glue-storefront.us.spryker.local glue.eu.spryker.local glue.us.spryker.local mail.spryker.local queue.spryker.local spryker.local swagger.spryker.local yves.eu.spryker.local yves.us.spryker.local' >> /etc/hosts"
                    docker/sdk up -t
                    docker/sdk cli composer dump-autoload -o -a --apcu
                    docker/sdk cli console queue:worker:start --stop-when-empty

            -   name: Run Tests
                run: |
                    docker/sdk exec cypress-tests cp .env.example .env
                    docker/sdk exec --env "ENV_REPOSITORY_ID=b2c" cypress-tests npm run cy:ci

            -   name: Upload artifacts
                if: failure()
                run: |
                    AWS_DEFAULT_REGION=${{env.ROBOT_TESTS_ARTIFACTS_BUCKET_REGION}} AWS_ACCESS_KEY_ID=${{ secrets.ROBOT_TESTS_ARTIFACTS_KEY }} AWS_SECRET_ACCESS_KEY=${{ secrets.ROBOT_TESTS_ARTIFACTS_SECRET }} aws s3 cp .cypress s3://${{vars.ROBOT_TESTS_ARTIFACTS_BUCKET}}/b2c/dms-off/cypress/${GITHUB_RUN_ID}/PHP8.3MariaDB/ --recursive

            -   name: Slack Notification for failed job
                uses: ./.github/actions/job-slack-notifications
                if: always()

    docker-alpine-php-83-mariadb-cypress:
        name: "[run-ui-ci] PHP 8.3 / MariaDB / Cypress / UI"
        runs-on: ubuntu-latest
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:8.3
            TRAVIS: 1
            ROBOT_TESTS_ARTIFACTS_BUCKET_REGION: eu-west-1
            SPRYKER_CURRENT_REGION: EU
            DYNAMIC_STORE_MODE: true
        steps:
            -   uses: actions/checkout@v4

            -   name: Install packages
                run: |
                    sudo apt-get update
                    sudo apt-get install -y python3-pip
                    pip3 install --upgrade pip
                    pip3 install awscli

            -   name: Install cypress-tests folder
                run: |
                    cd ./data && composer require "spryker/cypress-tests:dev-master" --dev --no-interaction
                    cp -r vendor ../vendor

            -   name: Install docker-compose
                run: |
                    sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                    sudo chmod +x /usr/local/bin/docker-compose

            -   name: Install Project
                continue-on-error: true
                run: |
                    git clone https://github.com/spryker/docker-sdk.git ./docker
                    docker/sdk boot deploy.ci.acceptance.mariadb.cypress.yml
                    sudo bash -c "echo '127.0.0.1 backend-api.eu.spryker.local backend-api.us.spryker.local backend-gateway.eu.spryker.local backend-gateway.us.spryker.local backoffice.eu.spryker.local backoffice.us.spryker.local glue-backend.eu.spryker.local glue-backend.us.spryker.local glue-storefront.eu.spryker.local glue-storefront.us.spryker.local glue.eu.spryker.local glue.us.spryker.local mail.spryker.local queue.spryker.local spryker.local swagger.spryker.local yves.eu.spryker.local yves.us.spryker.local' >> /etc/hosts"
                    docker/sdk up -t
                    docker/sdk cli composer dump-autoload -o -a --apcu
                    docker/sdk cli console queue:worker:start --stop-when-empty

            -   name: Run Tests
                run: |
                    docker/sdk exec cypress-tests cp .env.dynamic-store.example .env
                    docker/sdk exec cypress-tests git log -2
                    docker/sdk exec --env "ENV_REPOSITORY_ID=b2c" cypress-tests npm run cy:ci

            -   name: Upload artifacts
                if: failure()
                run: |
                    AWS_DEFAULT_REGION=${{env.ROBOT_TESTS_ARTIFACTS_BUCKET_REGION}} AWS_ACCESS_KEY_ID=${{ secrets.ROBOT_TESTS_ARTIFACTS_KEY }} AWS_SECRET_ACCESS_KEY=${{ secrets.ROBOT_TESTS_ARTIFACTS_SECRET }} aws s3 cp .cypress s3://${{vars.ROBOT_TESTS_ARTIFACTS_BUCKET}}/b2c/dms-on/cypress/${GITHUB_RUN_ID}/PHP8.3MariaDB/ --recursive

            -   name: Slack Notification for failed job
                uses: ./.github/actions/job-slack-notifications
                if: always()

