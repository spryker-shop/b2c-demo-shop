{% extends organism('agent-control-bar', '@SprykerShop:AgentWidget') %}

{% define data = {
    locale: app.locale | slice(0, 2),
} %}

{% block body %}
    {% set isAgentControl = is_granted('ROLE_PREVIOUS_ADMIN') %}
    {% set customerSectionClassNames = config.name ~ '__customer ' ~ (not isAgentControl ? config.name ~ '__customer--search') %}
    {% set agentSectionClassNames = config.name ~ '__agent ' ~ (not isAgentControl ? config.name ~ '__agent--search')  %}
    {% set customerTitle = 'agent.control_bar.customer_name' | trans %}

    <div class="container">
        <div class="{{ config.name }}__content">
            <div class="{{ customerSectionClassNames }} {{ config.name }}__col">
                {% if isAgentControl %}
                    {% include molecule('agent-control-item', 'AgentWidget') with {
                        data: {
                            title: customerTitle,
                            buttonLink: '/' ~ data.locale ~ '?_switch_user=_exit',
                            buttonTitle: 'agent.control_bar.logout_as_customer' | trans,
                            firstName: data.customer.firstName,
                            lastName: data.customer.lastName,
                            type: 'customer',
                        },
                    } only %}
                {% else %}
                    <div class="{{ config.name }}__title">{{ customerTitle }}</div>
                    <form method="GET" action="/{{ data.locale }}">
                        <div class="grid grid--middle grid--nowrap">
                            <div class="col col--expand">
                                {% include molecule('autocomplete-form') with {
                                    modifiers: ['small'],
                                    data: {
                                        id: 'agent',
                                        suggestionsUrl: path('agent-widget/customer-autocomplete'),
                                        name: '_switch_user',
                                        showCleanButton: true,
                                    },
                                    attributes: {
                                        'suggested-item-class-name': 'js-customer-list__container-item',
                                    },
                                } only %}
                            </div>
                            <div class="col">
                                <button class="button button--success button--agent">
                                    {{- 'agent.confirm_user_selection' | trans -}}
                                </button>
                            </div>
                        </div>
                    </form>
                {% endif %}
            </div>
            <div class="{{ agentSectionClassNames }} {{ config.name }}__col">
                {% include molecule('agent-control-item', 'AgentWidget') with {
                    data: {
                        firstName: data.agent.firstName,
                        lastName: data.agent.lastName,
                    },
                } only %}
            </div>
        </div>
    </div>
{% endblock %}
