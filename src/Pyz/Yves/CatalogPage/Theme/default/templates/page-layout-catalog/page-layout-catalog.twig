{% extends template('page-layout-catalog', '@SprykerShop:CatalogPage') %}

{% define data = {
    products: _view.products,
    facets: _view.facets,
    filteredFacets: _view.filteredFacets | default([]),
    category: _view.category | default,
    categories: categories | default([]),
    filterPath: _view.filterPath | default,
    viewMode: _view.viewMode | default,
    title: _view.category.name | default,
    metaTitle: _view.pageTitle | default(_view.category.name | default),
    metaDescription: _view.pageDescription | default,
    metaKeywords: _view.pageKeywords | default,
    pagination: {
        currentPage: _view.pagination.currentPage,
        maxPage: _view.pagination.maxPage,
    },
    isAjaxHeader: _view.isMiniCartAsyncModeEnabled | default(false),
    ajaxCartUrl: '/cart/async/mini-cart-view',
} %}

{% block container %}
    {% block breadcrumbs %}
        {% set breadcrumbSteps = _self.renderBreadcrumbSteps(data.category, false, data.filterPath) %}
        <div class="container">
            <div class="container__inner">
                {% block breadcrumb %}
                    {% embed molecule('breadcrumb') with {
                        modifiers: ['no-border'],
                        embed: {
                            breadcrumbs: breadcrumbSteps
                        }
                    } only %}
                        {% block breadcrumbs %}
                            {{ embed.breadcrumbs }}
                        {% endblock %}
                    {% endembed %}
                {% endblock %}
            </div>
        </div>
    {% endblock %}

    {% block title %}
        {% if data.category.image is defined %}
            {% include molecule('jumbotron') with {
                modifiers: ['category'],
                data: {
                    imageUrl: data.category.image,
                    headline: data.title,
                    subHeadline: null
                }
            } only %}
        {% else %}
            {% include molecule('jumbotron') with {
                modifiers: ['category', 'category-no-img'],
                data: {
                    headline: data.title,
                    subHeadline: null
                }
            } only %}
        {% endif %}
    {% endblock %}

    <div class="container">
        <main class="container__inner">
            {% block content %}
                {% set catalogJsName = 'js-catalog' %}

                {% include molecule('window-location-applicator', 'CatalogPage') with {
                    attributes: {
                        'form-class-name': catalogJsName ~ '__form',
                        'trigger-class-name': catalogJsName ~ '__trigger',
                        'sort-trigger-class-name': catalogJsName ~ '__sort-trigger',
                    },
                } only %}

                <form method="GET" class="grid js-catalog-filter-target js-form-input-default-value-disabler__catalog-form {{ catalogJsName }}__form">
                    {% block form %}
                        <div class="col col--sm-12 col--xl-3 catalog-left-side">
                            {% include molecule('view-mode-switch', 'CatalogPage') with {
                                class: 'catalog-left-side__switcher',
                                data: {
                                    viewMode: data.viewMode,
                                }
                            } only %}

                            {% block filterSection %}
                                {% include organism('filter-section', 'CatalogPage') with {
                                    data: {
                                        facets: data.facets,
                                        filteredFacets: data.filteredFacets,
                                        filterPath: data.filterPath,
                                        categories: data.categories,
                                        togglerClass: 'js-catalog-toggler-click__trigger',
                                        parentJsName: catalogJsName,
                                        numberFormatConfig: numberFormatConfig,
                                    },
                                } only %}
                            {% endblock %}
                        </div>

                        <div class="col col--sm-12 col--xl-9 catalog-right-side">
                            <button type="button" class="button button--hollow button--expand spacing-y spacing-y--big is-hidden-xl-only js-catalog-toggler-click__trigger">
                                {%- include atom('icon') with {
                                    class: 'spacing-right',
                                    data: {
                                        name: 'filters'
                                    }
                                } only -%}
                                {{- 'catalog.filter.filter' | trans -}}
                            </button>
                            {% block catalogContent %}
                                <div class="grid">
                                    <div class="col col--sm-12">
                                        {% include molecule('sort', 'CatalogPage') with {
                                            data: {
                                                pagination: data.pagination,
                                                sort: data.sort,
                                                parentJsName: catalogJsName,
                                            },
                                        } only %}
                                    </div>
                                    <div class="col col--sm-12">
                                        {% include organism('active-filter-section', 'CatalogPage') with {
                                            data: {
                                                facets: data.facets,
                                                filteredFacets: data.filteredFacets
                                            }
                                        } only %}
                                    </div>
                                    <div class="col col--sm-12">
                                        {% include molecule('view-mode-switch', 'CatalogPage') with {
                                            class: 'is-hidden-xl-only',
                                            data: {
                                                viewMode: data.viewMode
                                            }
                                        } only %}
                                    </div>
                                </div>

                                <div class="grid {% if data.viewMode != 'list' %}grid--stretch product-list{% endif %}">
                                    {% if data.products %}
                                        {% for product in data.products %}
                                            {% widget 'CatalogPageProductWidget' args [product, data.viewMode] with {
                                                data: {
                                                    eventRevealer: data.isAjaxHeader ? 'CART_UPDATE_EVENT' : null,
                                                },
                                            } only %}
                                            {% endwidget %}
                                        {% endfor %}
                                    {% else %}
                                        {% block noResults %}{{ parent() }}{% endblock %}
                                    {% endif %}
                                </div>

                                {% include molecule('pagination') with {
                                    data: data.pagination
                                } only %}
                            {% endblock %}
                        </div>

                        {% include molecule('toggler-click') with {
                            attributes: {
                                'trigger-class-name': 'js-catalog-toggler-click__trigger',
                                'target-class-name': 'js-catalog-filter-target',
                                'class-to-toggle': 'show-filter',
                            },
                        } only %}

                        {% include molecule('form-input-default-value-disabler') with {
                            attributes: {
                                'form-selector': '.js-form-input-default-value-disabler__catalog-form',
                                'input-selector': '.js-form-input-default-value-disabler__catalog-input'
                            }
                        } only %}
                    {% endblock %}
                </form>
            {% endblock %}

            {% macro renderBreadcrumbSteps(categoryNode, isLastLeaf, filterPath) %}
                {% import _self as self %}
                {% set categoryUrl = categoryNode.url | default %}
                {% set categoryUrl = filterPath is not empty ? url(filterPath, {categoryPath: categoryUrl | trimLocale}) : categoryUrl %}
                {% set categoryLabel = categoryNode.name | default %}
                {% set categoryPatrentNodes = categoryNode.parents | default(null) %}

                {% if categoryPatrentNodes is not empty %}
                    {{ self.renderBreadcrumbSteps(categoryPatrentNodes | first, false, filterPath) }}

                    {% if not isLastLeaf %}
                        {% include molecule('breadcrumb-step') with {
                            data: {
                                url: categoryUrl,
                                label: categoryLabel
                            }
                        } only %}
                    {% endif %}
                {% endif %}
            {% endmacro %}

        </main>
    </div>
{% endblock %}
