{% extends model('component') %}
{% import _self as component %}

{% define config = {
    name: 'customer-navigation',
    tag: 'nav'
} %}

{% define data = {
    activePage: required,
    activeEntityId: required
} %}

{%- macro isActive(page, activePage) -%}
    {%- if page == activePage -%}menu__item--active{%- endif -%}
{%- endmacro -%}

{%- import _self as macros -%}

{% block body %}
    <ul class="{{ component.renderClass('menu', modifiers) }}">
        <li class="{{ component.renderClass('menu__item', modifiers) }} {{macros.isActive('overview', data.activePage)}}">
            <a class="{{ component.renderClass('menu__link', modifiers) }}" href="{{ path('customer/overview') }}"
               data-id="sidebar-overview">{{ 'customer.account.overview' | trans }}</a>
        </li>
        <li class="{{ component.renderClass('menu__item', modifiers) }} {{macros.isActive('profile', data.activePage)}}">
            <a class="{{ component.renderClass('menu__link', modifiers) }}" href="{{ path('customer/profile') }}"
               data-id="sidebar-profile">{{ 'customer.account.profile_data' | trans }}</a>
        </li>
        <li class="{{ component.renderClass('menu__item', modifiers) }} {{macros.isActive('address', data.activePage)}}">
            <a class="{{ component.renderClass('menu__link', modifiers) }}" href="{{ path('customer/address') }}"
               data-id="sidebar-address">{{ 'customer.account.address' | trans }}</a>
        </li>
        <li class="{{ component.renderClass('menu__item', modifiers) }} {{macros.isActive('order', data.activePage)}}">
            <a class="{{ component.renderClass('menu__link', modifiers) }}" href="{{ path('customer/order') }}"
               data-id="sidebar-order">{{ 'customer.account.order_history' | trans }}</a>
        </li>

        {% embed molecule('return-list-link', 'SalesReturnPage') ignore missing with {
            class: component.renderClass('menu__link', modifiers),
            data: {
                activePage: data.activePage,
            },
            embed: {
                activeClass: _self.isActive('return/list', data.activePage),
                modifiers: modifiers,
            },
        } only %}
            {% import _self as component %}
            {% block component %}
                <li class="{{ component.renderClass('menu__item', embed.modifiers) }} {{ embed.activeClass }}">
                    {{ parent() }}
                </li>
            {% endblock %}
        {% endembed %}

        <li class="{{ component.renderClass('menu__item', modifiers) }} {{macros.isActive('newsletter', data.activePage)}}">
            <a class="{{ component.renderClass('menu__link', modifiers) }}" href="{{ path('customer/newsletter') }}"
               data-id="sidebar-newsletter">{{ 'customer.account.newsletter' | trans }}</a>
        </li>
        {% block wishlistNavigation %}
            {% widget 'WishlistMenuItemWidget' args [data.activePage, data.activeEntityId] with {
                modifiers: modifiers
            } only %}
                {% block body %}
                    {% define data = {
                        modifiers: modifiers
                    } %}
                    {{ parent() }}
                {% endblock %}
            {% endwidget %}
        {% endblock %}
        {% if widgetGlobalExists('SetMultiFactorAuthMenuItemWidget') %}
            {% widget 'SetMultiFactorAuthMenuItemWidget' args [data.activePage] only %}
                {% block body %}
                    <li class="menu__item {{ itemClass }}">
                        <a class="menu__link" href="{{ url(data.setMultiFactorAuthRouteName) }}" data-id="sidebar-multi-factor-auth">{{ 'multi_factor_auth.multi_factor_auth.list.title' | trans }}</a>
                    </li>
                {% endblock %}
            {% endwidget %}
        {% endif %}
    </ul>
{% endblock %}
