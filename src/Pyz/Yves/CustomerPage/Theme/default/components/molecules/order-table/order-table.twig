{% extends molecule('order-table', '@SprykerShop:CustomerPage') %}

{% define data = {
    requestUri: app.request.requestUri,
} %}

{% block customerReorderAction %}
    {% widget 'CustomerReorderFormWidget' args [order] only %}
        {% block body %}
            {% include molecule('remote-form-submit') with {
                data: {
                    label: 'customer.order.reorder' | trans,
                    buttonClass: 'table-action-list__link',
                },
                attributes: {
                    'form-name': 'customerReorderWidgetForm_' ~ data.order.idSalesOrder,
                    'form-action': path('customer/order/reorder', { idSalesOrder: data.order.idSalesOrder }),
                    'field-id': 'customerReorderWidgetForm__token_' ~ data.order.idSalesOrder,
                    'field-name': 'customerReorderWidgetForm[_token]',
                    'field-value': csrf_token('customerReorderWidgetForm'),
                },
            } only %}
        {% endblock %}
    {% endwidget %}
{% endblock %}

{% block orderCancelAction %}
    {% widget 'OrderCancelButtonWidget' args [order, data.requestUri] only %}
        {% block body %}
            {% include molecule('remote-form-submit') with {
                data: {
                    label: 'order_cancel_widget.cancel_order' | trans,
                    buttonClass: 'table-action-list__link',
                },
                attributes: {
                    'form-name': 'orderCancelForm_' ~ data.order.idSalesOrder,
                    'form-action': path('order/cancel', {
                        'id-sales-order': data.order.idSalesOrder,
                        'return-url': data.returnUrl,
                    }),
                    'field-id': 'orderCancelForm__token_' ~ data.order.idSalesOrder,
                    'field-name': 'orderCancelForm[_token]',
                    'field-value': csrf_token('orderCancelForm'),
                },
            } only %}
        {% endblock %}
    {% endwidget %}
{% endblock %}

{% block body %}
    {% if data.orders is empty %}
        <p>{{ 'customer.account.no_order' | trans }}</p>
    {% else %}
        <table class="table table--expand table--responsive">
            <thead>
                <tr>
                    <th>{{ 'customer.order.order_id' | trans }}</th>
                    <th>{{ 'customer.order.date' | trans }}</th>
                    <th>{{ 'customer.order.total' | trans }}</th>
                    <th>{{ 'customer.order.items_state' | trans }}</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                {% for order in data.orders %}
                    <tr class="table__tr table__tr--with-border">
                        <td class="transform-cell transform-cell--spacing-top" data-content="{{ 'customer.order.order_id' | trans }}">
                            {{ order.orderReference }}
                        </td>
                        <td class="transform-cell" data-content="{{ 'customer.order.date' | trans }}">
                            {{ date(order.createdAt) | formatDateTime }}
                        </td>
                        <td class="transform-cell" data-content="{{ 'customer.order.total' | trans }}">
                            {{ order.totals.grandTotal | default(0) | money(true, order.currencyIsoCode) }}
                        </td>
                        <td class="transform-cell transform-cell--spacing-bottom" data-content="{{ 'customer.order.items_state' | trans }}">
                            <div>{{ block('stateWrapper') }}</div>
                        </td>
                        <td class="table__actions">
                            {% include molecule('table-action-list') with {
                                data: {
                                    items: [
                                        {
                                            url: path('customer/order/details', { id: order.idSalesOrder }),
                                            title: 'customer.order.view_order' | trans,
                                        },
                                        {
                                            customAction: block('customerReorderAction'),
                                        },
                                        {
                                            url: path('return/create', { orderReference: order.orderReference }),
                                            title: 'return_page.button.create_return' | trans,
                                        },
                                        {
                                            customAction: block('orderCancelAction'),
                                        },
                                    ],
                                },
                            } only %}
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    {% endif %}
{% endblock %}
